/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.sistemapadaria.views;

import com.mycompany.sistemapadaria.dao.ProdutoDAO;
import com.mycompany.sistemapadaria.models.Produto;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import java.awt.Color;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

/**
 *
 * @author daniel.passuncao
 */
public class TelaCadastroProduto extends javax.swing.JFrame {

    Produto alteraProduto = null;

    /**
     * Creates new form TelaCadastroProduto
     */
    public TelaCadastroProduto() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        pnlGuiasProduto = new javax.swing.JTabbedPane();
        pnlCadastroProduto = new javax.swing.JPanel();
        lblCadastroProduto = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        lblNome = new javax.swing.JLabel();
        lblDescricao = new javax.swing.JLabel();
        txtDescricao = new javax.swing.JTextField();
        lblPreco = new javax.swing.JLabel();
        txtPreco = new javax.swing.JTextField();
        cboCategoria = new javax.swing.JComboBox<>();
        lblCategoria = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        lblVolume = new javax.swing.JLabel();
        txtObservacoes = new javax.swing.JTextField();
        lblObservacoes = new javax.swing.JLabel();
        lblDataNascimento = new javax.swing.JLabel();
        jdcValidade = new com.toedter.calendar.JDateChooser();
        btnCadastrar = new javax.swing.JButton();
        btnVoltar = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();
        jSeparator2 = new javax.swing.JSeparator();
        cboVolume = new javax.swing.JComboBox<>();
        lblQuantidade = new javax.swing.JLabel();
        txtQuantidade = new javax.swing.JTextField();
        pnlConsultaProduto = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProduto = new javax.swing.JTable();
        btnListar = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        lblcategoria = new javax.swing.JLabel();
        txtCategoria = new javax.swing.JTextField();
        btnCategoria = new javax.swing.JButton();
        lblValidade = new javax.swing.JLabel();
        btnValidade = new javax.swing.JButton();
        jdcValidadeConsulta = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 153, 153));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Rockwell Condensed", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Dona Palmirinha Padoca's");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/old-woman (2).png"))); // NOI18N

        pnlGuiasProduto.setBackground(new java.awt.Color(255, 255, 255));

        pnlCadastroProduto.setBackground(new java.awt.Color(255, 239, 238));

        lblCadastroProduto.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblCadastroProduto.setText("Cadastro de Produto");

        txtNome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNomeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNomeFocusLost(evt);
            }
        });
        txtNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNomeKeyReleased(evt);
            }
        });

        lblNome.setText("Nome *");

        lblDescricao.setText("Descrição *");

        txtDescricao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDescricaoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDescricaoFocusLost(evt);
            }
        });
        txtDescricao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescricaoActionPerformed(evt);
            }
        });
        txtDescricao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDescricaoKeyReleased(evt);
            }
        });

        lblPreco.setText("Preço *");

        txtPreco.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPrecoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPrecoFocusLost(evt);
            }
        });
        txtPreco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecoActionPerformed(evt);
            }
        });

        cboCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Doces", "Salgados", "Bebidas" }));
        cboCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboCategoriaActionPerformed(evt);
            }
        });

        lblCategoria.setText("Categoria *");

        lblVolume.setText("Volume *");

        txtObservacoes.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtObservacoesFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtObservacoesFocusLost(evt);
            }
        });
        txtObservacoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtObservacoesActionPerformed(evt);
            }
        });

        lblObservacoes.setText("Observações: *");

        lblDataNascimento.setText("Data de Validade *");

        jdcValidade.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jdcValidadeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jdcValidadeFocusLost(evt);
            }
        });

        btnCadastrar.setText("Cadastrar");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        cboVolume.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "KG", "Litro", "Caixa", "Porção", "Pacote", "Unidade" }));

        lblQuantidade.setText("Quantidade *");

        txtQuantidade.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtQuantidadeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtQuantidadeFocusLost(evt);
            }
        });
        txtQuantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantidadeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlCadastroProdutoLayout = new javax.swing.GroupLayout(pnlCadastroProduto);
        pnlCadastroProduto.setLayout(pnlCadastroProdutoLayout);
        pnlCadastroProdutoLayout.setHorizontalGroup(
            pnlCadastroProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCadastroProdutoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblObservacoes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtObservacoes, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
            .addGroup(pnlCadastroProdutoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCadastroProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCadastroProdutoLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(pnlCadastroProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPreco, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblNome, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblQuantidade, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblDescricao, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(pnlCadastroProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNome, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                            .addComponent(txtPreco, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                            .addComponent(txtQuantidade))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlCadastroProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblVolume, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblCategoria, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblDataNascimento, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlCadastroProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jdcValidade, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                            .addComponent(cboVolume, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cboCategoria, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(17, 17, 17))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCadastroProdutoLayout.createSequentialGroup()
                        .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlCadastroProdutoLayout.createSequentialGroup()
                        .addComponent(lblCadastroProduto)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jSeparator1))
                .addContainerGap())
        );
        pnlCadastroProdutoLayout.setVerticalGroup(
            pnlCadastroProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCadastroProdutoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCadastroProduto)
                .addGap(12, 12, 12)
                .addGroup(pnlCadastroProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCadastroProdutoLayout.createSequentialGroup()
                        .addGroup(pnlCadastroProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNome)
                            .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlCadastroProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDescricao)
                            .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDataNascimento)))
                    .addGroup(pnlCadastroProdutoLayout.createSequentialGroup()
                        .addGroup(pnlCadastroProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCategoria)
                            .addComponent(cboCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jdcValidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(pnlCadastroProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPreco)
                    .addComponent(txtPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblVolume)
                    .addComponent(cboVolume, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlCadastroProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblQuantidade)
                    .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlCadastroProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblObservacoes)
                    .addComponent(txtObservacoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlCadastroProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pnlGuiasProduto.addTab("Cadastro de Produtos", pnlCadastroProduto);

        pnlConsultaProduto.setBackground(new java.awt.Color(255, 239, 238));

        tblProduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "Descrição", "Preço", "Categoria", "Validade", "Volume", "Quantidade", "OBS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblProduto);

        btnListar.setText("Listar");
        btnListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarActionPerformed(evt);
            }
        });

        btnAlterar.setText("Alterar");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnSair.setText("Voltar");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        lblcategoria.setBackground(new java.awt.Color(0, 0, 0));
        lblcategoria.setText("Categoria:");

        txtCategoria.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCategoriaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCategoriaFocusLost(evt);
            }
        });
        txtCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCategoriaActionPerformed(evt);
            }
        });

        btnCategoria.setText("Pesquisar");
        btnCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCategoriaActionPerformed(evt);
            }
        });

        lblValidade.setBackground(new java.awt.Color(0, 0, 0));
        lblValidade.setText("Validade:");

        btnValidade.setText("Pesquisar");
        btnValidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnValidadeActionPerformed(evt);
            }
        });

        jdcValidadeConsulta.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jdcValidadeConsultaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jdcValidadeConsultaFocusLost(evt);
            }
        });

        javax.swing.GroupLayout pnlConsultaProdutoLayout = new javax.swing.GroupLayout(pnlConsultaProduto);
        pnlConsultaProduto.setLayout(pnlConsultaProdutoLayout);
        pnlConsultaProdutoLayout.setHorizontalGroup(
            pnlConsultaProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlConsultaProdutoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlConsultaProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(pnlConsultaProdutoLayout.createSequentialGroup()
                        .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnListar, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnlConsultaProdutoLayout.createSequentialGroup()
                        .addComponent(lblcategoria)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCategoria)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblValidade)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jdcValidadeConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnValidade)))
                .addContainerGap())
        );
        pnlConsultaProdutoLayout.setVerticalGroup(
            pnlConsultaProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlConsultaProdutoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlConsultaProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlConsultaProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblcategoria)
                        .addComponent(txtCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblValidade)
                        .addComponent(btnCategoria)
                        .addComponent(btnValidade))
                    .addComponent(jdcValidadeConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlConsultaProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnListar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pnlGuiasProduto.addTab("Consulta de Produtos", pnlConsultaProduto);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlGuiasProduto)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlGuiasProduto))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void btnListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarActionPerformed

        ArrayList<Produto> lstRetorno = ProdutoDAO.listar();

        DefaultTableModel modelo = (DefaultTableModel) tblProduto.getModel();

        modelo.setRowCount(0);

        SimpleDateFormat formatador = new SimpleDateFormat("dd/MM/yyyy");

        for (Produto item : lstRetorno) {

            modelo.addRow(new String[]{
                String.valueOf(item.getIdProduto()),
                String.valueOf(item.getNomeProduto()),
                String.valueOf(item.getDescricaoProduto()),
                String.valueOf(item.getPrecoProduto()),
                String.valueOf(item.getCategoriaProduto()),
                String.valueOf(formatador.format(item.getValidadeProduto())),
                String.valueOf(item.getVolumeProduto()),
                String.valueOf(item.getQuantidadeProduto()),
                String.valueOf(item.getObservacaoProduto())
            });
        }

    }//GEN-LAST:event_btnListarActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        DefaultTableModel modeloProduto = (DefaultTableModel) tblProduto.getModel();
        int linhaSelecionada = tblProduto.getSelectedRow();
        if (linhaSelecionada >= 0) {

            int id = Integer.parseInt(modeloProduto.getValueAt(linhaSelecionada, 0).toString());
            String nomeProduto = modeloProduto.getValueAt(linhaSelecionada, 1).toString();
            String descricaoProduto = modeloProduto.getValueAt(linhaSelecionada, 2).toString();
            double precoProduto = Double.parseDouble(modeloProduto.getValueAt(linhaSelecionada, 3).toString());
            String categoriaProduto = modeloProduto.getValueAt(linhaSelecionada, 4).toString();
            Date dataValidade = null;
            try {
                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                dataValidade = sdf.parse(modeloProduto.getValueAt(linhaSelecionada, 5).toString());
            } catch (ParseException ex) {
                ex.printStackTrace(); // Trate a exceção adequadamente
            }
            String volumeProduto = modeloProduto.getValueAt(linhaSelecionada, 6).toString();
            int quantidadeProduto = Integer.parseInt(modeloProduto.getValueAt(linhaSelecionada, 7).toString());
            String observacaoProduto = modeloProduto.getValueAt(linhaSelecionada, 8).toString();

            alteraProduto = new Produto(id, nomeProduto, descricaoProduto, precoProduto, categoriaProduto, dataValidade, volumeProduto,quantidadeProduto, observacaoProduto);

            pnlGuiasProduto.setSelectedIndex(0);
            txtNome.setText(alteraProduto.getNomeProduto());
            txtDescricao.setText(alteraProduto.getDescricaoProduto());
            txtPreco.setText(String.valueOf(alteraProduto.getPrecoProduto()));
            txtObservacoes.setText(alteraProduto.getObservacaoProduto());
            cboCategoria.setSelectedItem(alteraProduto.getCategoriaProduto());
            cboVolume.setSelectedItem(alteraProduto.getVolumeProduto());
            txtQuantidade.setText(String.valueOf(alteraProduto.getQuantidadeProduto()));
            jdcValidade.setDate(alteraProduto.getValidadeProduto());
        } else {
            JOptionPane.showMessageDialog(rootPane, "Selecione uma linha!");
        }
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        int linhaSelecionada = tblProduto.getSelectedRow();
        if (linhaSelecionada >= 0) {
            DefaultTableModel modelo = (DefaultTableModel) tblProduto.getModel();
            int idExcluir = Integer.parseInt(modelo.getValueAt(linhaSelecionada, 0).toString());
            boolean retorno = ProdutoDAO.excluir(idExcluir);
            if (retorno) {
                JOptionPane.showMessageDialog(rootPane, "Exclusão feita com sucesso!");
            } else {
                JOptionPane.showMessageDialog(rootPane, "Erro na exclusão de produto!");
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Por favor, selecione uma linha antes de prosseguir com a exclusão.");
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnSairActionPerformed

    private void btnValidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnValidadeActionPerformed
        if (jdcValidadeConsulta.getDate() == null) {
            atualizarTabela();
        } else {
            Date validadeProduto = jdcValidadeConsulta.getDate();

            ArrayList<Produto> lstRetorno = ProdutoDAO.buscarValidade(validadeProduto);

            DefaultTableModel modelo = (DefaultTableModel) tblProduto.getModel();

            modelo.setRowCount(0);

            SimpleDateFormat formatador = new SimpleDateFormat("dd/MM/yyyy");

            for (Produto item : lstRetorno) {

                modelo.addRow(new String[]{
                    String.valueOf(item.getIdProduto()),
                    String.valueOf(item.getNomeProduto()),
                    String.valueOf(item.getDescricaoProduto()),
                    String.valueOf(item.getPrecoProduto()),
                    String.valueOf(item.getCategoriaProduto()),
                    String.valueOf(formatador.format(item.getValidadeProduto())),
                    String.valueOf(item.getVolumeProduto()),
                    String.valueOf(item.getQuantidadeProduto()),
                    String.valueOf(item.getObservacaoProduto())
                });
            }
        }
        jdcValidadeConsulta.setDate(null);
    }//GEN-LAST:event_btnValidadeActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        if (txtNome.getText().isEmpty() || txtDescricao.getText().isEmpty() || txtPreco.getText().isEmpty()
                || cboCategoria.getSelectedItem() == null || jdcValidade.getDate() == null
                || cboVolume.getSelectedItem() == null || txtQuantidade.getText().isEmpty() || txtObservacoes.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Por favor, preencha todos os campos antes de continuar.");
        } else {
            if (this.alteraProduto == null) {
                String nomeProduto = txtNome.getText();
                String descricaoProduto = txtDescricao.getText();
                double precoProduto = Double.parseDouble(txtPreco.getText());
                String categoriaProduto = cboCategoria.getSelectedItem().toString();
                Date dataValidade = jdcValidade.getDate();
                String volumeProduto = cboVolume.getSelectedItem().toString();
                int quantidadeProduto = Integer.parseInt(txtQuantidade.getText());
                String observacaoProduto = txtObservacoes.getText();

                Produto novoProduto = new Produto(nomeProduto, descricaoProduto, precoProduto, categoriaProduto, dataValidade, volumeProduto, quantidadeProduto, observacaoProduto);
                boolean retorno = ProdutoDAO.cadastrar(novoProduto);
                if (retorno) {
                    JOptionPane.showMessageDialog(rootPane, "Produto cadastrado com sucesso!");
                    txtNome.setText("");
                    txtDescricao.setText("");
                    txtPreco.setText("");
                    cboCategoria.setSelectedIndex(0);
                    jdcValidade.setDate(null);
                    cboVolume.setSelectedIndex(0);
                    txtQuantidade.setText("");
                    txtObservacoes.setText("");
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Erro ao cadastrar produto!");
                }
            } else {
                String nome = txtNome.getText();
                String descricao = txtDescricao.getText();
                double preco = Double.parseDouble(txtPreco.getText());
                String categoria = cboCategoria.getSelectedItem().toString();
                Date data = jdcValidade.getDate();
                String volume = cboVolume.getSelectedItem().toString();
                int quantidade = Integer.parseInt(txtQuantidade.getText());
                String observacao = txtObservacoes.getText();

                alteraProduto.setNomeProduto(nome);
                alteraProduto.setDescricaoProduto(descricao);
                alteraProduto.setPrecoProduto(preco);
                alteraProduto.setCategoriaProduto(categoria);
                alteraProduto.setValidadeProduto(data);
                alteraProduto.setVolumeProduto(volume);
                alteraProduto.setQuantidadeProduto(quantidade);
                alteraProduto.setObservacaoProduto(observacao);

                boolean retorno = ProdutoDAO.alterar(alteraProduto);

                if (retorno) {
                    JOptionPane.showMessageDialog(rootPane, "Produto alterado com sucesso!");
                    txtNome.setText("");
                    txtDescricao.setText("");
                    txtPreco.setText("");
                    cboCategoria.setSelectedIndex(0);
                    jdcValidade.setDate(null);
                    cboVolume.setSelectedIndex(0);
                    txtQuantidade.setText("");
                    txtObservacoes.setText("");
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Falha na alteração do produto!");
                }
            }
        }
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void txtObservacoesFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtObservacoesFocusLost
        txtObservacoes.setBackground(Color.white);
    }//GEN-LAST:event_txtObservacoesFocusLost

    private void txtObservacoesFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtObservacoesFocusGained
        txtObservacoes.setBackground(Color.yellow);
    }//GEN-LAST:event_txtObservacoesFocusGained

    private void cboCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboCategoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboCategoriaActionPerformed

    private void txtPrecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecoActionPerformed

    private void txtPrecoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPrecoFocusLost
        txtPreco.setBackground(Color.white);
    }//GEN-LAST:event_txtPrecoFocusLost

    private void txtPrecoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPrecoFocusGained
        txtPreco.setBackground(Color.yellow);
    }//GEN-LAST:event_txtPrecoFocusGained

    private void txtDescricaoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescricaoKeyReleased
        txtDescricao.setText(txtDescricao.getText().toUpperCase());
    }//GEN-LAST:event_txtDescricaoKeyReleased

    private void txtDescricaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescricaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescricaoActionPerformed

    private void txtDescricaoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDescricaoFocusLost
        txtDescricao.setBackground(Color.white);
    }//GEN-LAST:event_txtDescricaoFocusLost

    private void txtDescricaoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDescricaoFocusGained
        txtDescricao.setBackground(Color.yellow);
    }//GEN-LAST:event_txtDescricaoFocusGained

    private void txtNomeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeKeyReleased
        txtNome.setText(txtNome.getText().toUpperCase());
    }//GEN-LAST:event_txtNomeKeyReleased

    private void txtNomeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNomeFocusLost
        txtNome.setBackground(Color.white);
    }//GEN-LAST:event_txtNomeFocusLost

    private void txtNomeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNomeFocusGained
        txtNome.setBackground(Color.yellow);
    }//GEN-LAST:event_txtNomeFocusGained

    private void txtCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCategoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCategoriaActionPerformed

    private void btnCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCategoriaActionPerformed
        if (txtCategoria.getText().strip().equals("")) {
            atualizarTabela();
        } else {
            String categoriaProduto = txtCategoria.getText();

            ArrayList<Produto> lstRetorno = ProdutoDAO.buscarCategoria(categoriaProduto);

            DefaultTableModel modelo = (DefaultTableModel) tblProduto.getModel();

            modelo.setRowCount(0);

            SimpleDateFormat formatador = new SimpleDateFormat("dd/MM/yyyy");

            for (Produto item : lstRetorno) {

                modelo.addRow(new String[]{
                    String.valueOf(item.getIdProduto()),
                    String.valueOf(item.getNomeProduto()),
                    String.valueOf(item.getDescricaoProduto()),
                    String.valueOf(item.getPrecoProduto()),
                    String.valueOf(item.getCategoriaProduto()),
                    String.valueOf(formatador.format(item.getValidadeProduto())),
                    String.valueOf(item.getVolumeProduto()),
                    String.valueOf(item.getQuantidadeProduto()),
                    String.valueOf(item.getObservacaoProduto())
                });
            }
        }
    }//GEN-LAST:event_btnCategoriaActionPerformed

    private void txtObservacoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtObservacoesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtObservacoesActionPerformed

    private void txtQuantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuantidadeActionPerformed

    private void txtQuantidadeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtQuantidadeFocusGained
        txtQuantidade.setBackground(Color.yellow);
    }//GEN-LAST:event_txtQuantidadeFocusGained

    private void txtQuantidadeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtQuantidadeFocusLost
        txtQuantidade.setBackground(Color.white);
    }//GEN-LAST:event_txtQuantidadeFocusLost

    private void jdcValidadeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jdcValidadeFocusGained
        jdcValidade.setBackground(Color.yellow);
    }//GEN-LAST:event_jdcValidadeFocusGained

    private void jdcValidadeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jdcValidadeFocusLost
        jdcValidade.setBackground(Color.white);
    }//GEN-LAST:event_jdcValidadeFocusLost

    private void txtCategoriaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCategoriaFocusGained
        txtCategoria.setBackground(Color.yellow);
    }//GEN-LAST:event_txtCategoriaFocusGained

    private void txtCategoriaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCategoriaFocusLost
        txtCategoria.setBackground(Color.white);
    }//GEN-LAST:event_txtCategoriaFocusLost

    private void jdcValidadeConsultaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jdcValidadeConsultaFocusGained
        jdcValidade.setBackground(Color.yellow);
    }//GEN-LAST:event_jdcValidadeConsultaFocusGained

    private void jdcValidadeConsultaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jdcValidadeConsultaFocusLost
        jdcValidade.setBackground(Color.white);
    }//GEN-LAST:event_jdcValidadeConsultaFocusLost
    public void atualizarTabela() {

        ArrayList<Produto> lstRetorno = ProdutoDAO.listar();

        DefaultTableModel modelo = (DefaultTableModel) tblProduto.getModel();

        modelo.setRowCount(0);

        SimpleDateFormat formatador = new SimpleDateFormat("dd/MM/yyyy");

        for (Produto item : lstRetorno) {

            modelo.addRow(new String[]{
                String.valueOf(item.getIdProduto()),
                String.valueOf(item.getNomeProduto()),
                String.valueOf(item.getDescricaoProduto()),
                String.valueOf(item.getPrecoProduto()),
                String.valueOf(item.getCategoriaProduto()),
                String.valueOf(formatador.format(item.getValidadeProduto())),
                String.valueOf(item.getVolumeProduto()),
                String.valueOf(item.getQuantidadeProduto()),
                String.valueOf(item.getObservacaoProduto())
            });
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaCadastroProduto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnCategoria;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnListar;
    private javax.swing.JButton btnSair;
    private javax.swing.JButton btnValidade;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JComboBox<String> cboCategoria;
    private javax.swing.JComboBox<String> cboVolume;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private com.toedter.calendar.JDateChooser jdcValidade;
    private com.toedter.calendar.JDateChooser jdcValidadeConsulta;
    private javax.swing.JLabel lblCadastroProduto;
    private javax.swing.JLabel lblCategoria;
    private javax.swing.JLabel lblDataNascimento;
    private javax.swing.JLabel lblDescricao;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblObservacoes;
    private javax.swing.JLabel lblPreco;
    private javax.swing.JLabel lblQuantidade;
    private javax.swing.JLabel lblValidade;
    private javax.swing.JLabel lblVolume;
    private javax.swing.JLabel lblcategoria;
    private javax.swing.JPanel pnlCadastroProduto;
    private javax.swing.JPanel pnlConsultaProduto;
    private javax.swing.JTabbedPane pnlGuiasProduto;
    private javax.swing.JTable tblProduto;
    private javax.swing.JTextField txtCategoria;
    private javax.swing.JTextField txtDescricao;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtObservacoes;
    private javax.swing.JTextField txtPreco;
    private javax.swing.JTextField txtQuantidade;
    // End of variables declaration//GEN-END:variables
}
